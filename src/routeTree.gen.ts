/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LetterofthelawImport } from './routes/letterofthelaw'
import { Route as DarkandlightImport } from './routes/darkandlight'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as MechanicsEndwalkerIndexImport } from './routes/mechanics/endwalker/index'
import { Route as MechanicsDawntrailIndexImport } from './routes/mechanics/dawntrail/index'
import { Route as MechanicsEndwalkerAnabaseiosIndexImport } from './routes/mechanics/endwalker/anabaseios/index'
import { Route as MechanicsDawntrailLightweightIndexImport } from './routes/mechanics/dawntrail/lightweight/index'
import { Route as MechanicsCriterionAaiIndexImport } from './routes/mechanics/criterion/aai/index'
import { Route as MechanicsDawntrailLightweightMouser1Import } from './routes/mechanics/dawntrail/lightweight/mouser1'
import { Route as MechanicsDawntrailLightweightClonesImport } from './routes/mechanics/dawntrail/lightweight/clones'

// Create Virtual Routes

const SetupLazyImport = createFileRoute('/setup')()
const P11sLetterofthelawLazyImport = createFileRoute('/p11s/letterofthelaw')()
const P11sDarkandlightLazyImport = createFileRoute('/p11s/darkandlight')()
const DevSimpleaoeLazyImport = createFileRoute('/dev/simpleaoe')()
const P12sP2Classical2LazyImport = createFileRoute('/p12s/p2/classical2')()
const P12sP2Classical1LazyImport = createFileRoute('/p12s/p2/classical1')()
const P12sP2Caloric2LazyImport = createFileRoute('/p12s/p2/caloric2')()
const P12sP2Caloric1LazyImport = createFileRoute('/p12s/p2/caloric1')()
const P12sP1Superchaintheory2bLazyImport = createFileRoute(
  '/p12s/p1/superchaintheory2b',
)()
const P12sP1Superchaintheory2aLazyImport = createFileRoute(
  '/p12s/p1/superchaintheory2a',
)()
const P12sP1Superchaintheory1LazyImport = createFileRoute(
  '/p12s/p1/superchaintheory1',
)()
const P12sP1Paradeigma3LazyImport = createFileRoute('/p12s/p1/paradeigma3')()
const MechanicsEndwalkerAnabaseiosP11sLetterofthelawLazyImport =
  createFileRoute('/mechanics/endwalker/anabaseios/p11s/letterofthelaw')()
const MechanicsEndwalkerAnabaseiosP11sDarkandlightLazyImport = createFileRoute(
  '/mechanics/endwalker/anabaseios/p11s/darkandlight',
)()
const MechanicsCriterionAaiStaticeIntermissionLazyImport = createFileRoute(
  '/mechanics/criterion/aai/statice/intermission',
)()
const MechanicsEndwalkerAnabaseiosP12sP2Classical2LazyImport = createFileRoute(
  '/mechanics/endwalker/anabaseios/p12s/p2/classical2',
)()
const MechanicsEndwalkerAnabaseiosP12sP2Classical1LazyImport = createFileRoute(
  '/mechanics/endwalker/anabaseios/p12s/p2/classical1',
)()
const MechanicsEndwalkerAnabaseiosP12sP2Caloric2LazyImport = createFileRoute(
  '/mechanics/endwalker/anabaseios/p12s/p2/caloric2',
)()
const MechanicsEndwalkerAnabaseiosP12sP2Caloric1LazyImport = createFileRoute(
  '/mechanics/endwalker/anabaseios/p12s/p2/caloric1',
)()
const MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2bLazyImport =
  createFileRoute(
    '/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory2b',
  )()
const MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2aLazyImport =
  createFileRoute(
    '/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory2a',
  )()
const MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory1LazyImport =
  createFileRoute('/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory1')()
const MechanicsEndwalkerAnabaseiosP12sP1Paradeigma3LazyImport = createFileRoute(
  '/mechanics/endwalker/anabaseios/p12s/p1/paradeigma3',
)()

// Create/Update Routes

const SetupLazyRoute = SetupLazyImport.update({
  path: '/setup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/setup.lazy').then((d) => d.Route))

const LetterofthelawRoute = LetterofthelawImport.update({
  path: '/letterofthelaw',
  getParentRoute: () => rootRoute,
} as any)

const DarkandlightRoute = DarkandlightImport.update({
  path: '/darkandlight',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const P11sLetterofthelawLazyRoute = P11sLetterofthelawLazyImport.update({
  path: '/p11s/letterofthelaw',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p11s/letterofthelaw.lazy').then((d) => d.Route),
)

const P11sDarkandlightLazyRoute = P11sDarkandlightLazyImport.update({
  path: '/p11s/darkandlight',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p11s/darkandlight.lazy').then((d) => d.Route),
)

const DevSimpleaoeLazyRoute = DevSimpleaoeLazyImport.update({
  path: '/dev/simpleaoe',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dev/simpleaoe.lazy').then((d) => d.Route))

const MechanicsEndwalkerIndexRoute = MechanicsEndwalkerIndexImport.update({
  path: '/mechanics/endwalker/',
  getParentRoute: () => rootRoute,
} as any)

const MechanicsDawntrailIndexRoute = MechanicsDawntrailIndexImport.update({
  path: '/mechanics/dawntrail/',
  getParentRoute: () => rootRoute,
} as any)

const P12sP2Classical2LazyRoute = P12sP2Classical2LazyImport.update({
  path: '/p12s/p2/classical2',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p12s/p2/classical2.lazy').then((d) => d.Route),
)

const P12sP2Classical1LazyRoute = P12sP2Classical1LazyImport.update({
  path: '/p12s/p2/classical1',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p12s/p2/classical1.lazy').then((d) => d.Route),
)

const P12sP2Caloric2LazyRoute = P12sP2Caloric2LazyImport.update({
  path: '/p12s/p2/caloric2',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p12s/p2/caloric2.lazy').then((d) => d.Route),
)

const P12sP2Caloric1LazyRoute = P12sP2Caloric1LazyImport.update({
  path: '/p12s/p2/caloric1',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p12s/p2/caloric1.lazy').then((d) => d.Route),
)

const P12sP1Superchaintheory2bLazyRoute =
  P12sP1Superchaintheory2bLazyImport.update({
    path: '/p12s/p1/superchaintheory2b',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/p12s/p1/superchaintheory2b.lazy').then((d) => d.Route),
  )

const P12sP1Superchaintheory2aLazyRoute =
  P12sP1Superchaintheory2aLazyImport.update({
    path: '/p12s/p1/superchaintheory2a',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/p12s/p1/superchaintheory2a.lazy').then((d) => d.Route),
  )

const P12sP1Superchaintheory1LazyRoute =
  P12sP1Superchaintheory1LazyImport.update({
    path: '/p12s/p1/superchaintheory1',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/p12s/p1/superchaintheory1.lazy').then((d) => d.Route),
  )

const P12sP1Paradeigma3LazyRoute = P12sP1Paradeigma3LazyImport.update({
  path: '/p12s/p1/paradeigma3',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/p12s/p1/paradeigma3.lazy').then((d) => d.Route),
)

const MechanicsEndwalkerAnabaseiosIndexRoute =
  MechanicsEndwalkerAnabaseiosIndexImport.update({
    path: '/mechanics/endwalker/anabaseios/',
    getParentRoute: () => rootRoute,
  } as any)

const MechanicsDawntrailLightweightIndexRoute =
  MechanicsDawntrailLightweightIndexImport.update({
    path: '/mechanics/dawntrail/lightweight/',
    getParentRoute: () => rootRoute,
  } as any)

const MechanicsCriterionAaiIndexRoute = MechanicsCriterionAaiIndexImport.update(
  {
    path: '/mechanics/criterion/aai/',
    getParentRoute: () => rootRoute,
  } as any,
)

const MechanicsDawntrailLightweightMouser1Route =
  MechanicsDawntrailLightweightMouser1Import.update({
    path: '/mechanics/dawntrail/lightweight/mouser1',
    getParentRoute: () => rootRoute,
  } as any)

const MechanicsDawntrailLightweightClonesRoute =
  MechanicsDawntrailLightweightClonesImport.update({
    path: '/mechanics/dawntrail/lightweight/clones',
    getParentRoute: () => rootRoute,
  } as any)

const MechanicsEndwalkerAnabaseiosP11sLetterofthelawLazyRoute =
  MechanicsEndwalkerAnabaseiosP11sLetterofthelawLazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p11s/letterofthelaw',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p11s/letterofthelaw.lazy'
    ).then((d) => d.Route),
  )

const MechanicsEndwalkerAnabaseiosP11sDarkandlightLazyRoute =
  MechanicsEndwalkerAnabaseiosP11sDarkandlightLazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p11s/darkandlight',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p11s/darkandlight.lazy'
    ).then((d) => d.Route),
  )

const MechanicsCriterionAaiStaticeIntermissionLazyRoute =
  MechanicsCriterionAaiStaticeIntermissionLazyImport.update({
    path: '/mechanics/criterion/aai/statice/intermission',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/mechanics/criterion/aai/statice/intermission.lazy').then(
      (d) => d.Route,
    ),
  )

const MechanicsEndwalkerAnabaseiosP12sP2Classical2LazyRoute =
  MechanicsEndwalkerAnabaseiosP12sP2Classical2LazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p12s/p2/classical2',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p12s/p2/classical2.lazy'
    ).then((d) => d.Route),
  )

const MechanicsEndwalkerAnabaseiosP12sP2Classical1LazyRoute =
  MechanicsEndwalkerAnabaseiosP12sP2Classical1LazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p12s/p2/classical1',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p12s/p2/classical1.lazy'
    ).then((d) => d.Route),
  )

const MechanicsEndwalkerAnabaseiosP12sP2Caloric2LazyRoute =
  MechanicsEndwalkerAnabaseiosP12sP2Caloric2LazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p12s/p2/caloric2',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p12s/p2/caloric2.lazy'
    ).then((d) => d.Route),
  )

const MechanicsEndwalkerAnabaseiosP12sP2Caloric1LazyRoute =
  MechanicsEndwalkerAnabaseiosP12sP2Caloric1LazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p12s/p2/caloric1',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p12s/p2/caloric1.lazy'
    ).then((d) => d.Route),
  )

const MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2bLazyRoute =
  MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2bLazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory2b',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory2b.lazy'
    ).then((d) => d.Route),
  )

const MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2aLazyRoute =
  MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2aLazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory2a',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory2a.lazy'
    ).then((d) => d.Route),
  )

const MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory1LazyRoute =
  MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory1LazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory1',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory1.lazy'
    ).then((d) => d.Route),
  )

const MechanicsEndwalkerAnabaseiosP12sP1Paradeigma3LazyRoute =
  MechanicsEndwalkerAnabaseiosP12sP1Paradeigma3LazyImport.update({
    path: '/mechanics/endwalker/anabaseios/p12s/p1/paradeigma3',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import(
      './routes/mechanics/endwalker/anabaseios/p12s/p1/paradeigma3.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/darkandlight': {
      preLoaderRoute: typeof DarkandlightImport
      parentRoute: typeof rootRoute
    }
    '/letterofthelaw': {
      preLoaderRoute: typeof LetterofthelawImport
      parentRoute: typeof rootRoute
    }
    '/setup': {
      preLoaderRoute: typeof SetupLazyImport
      parentRoute: typeof rootRoute
    }
    '/dev/simpleaoe': {
      preLoaderRoute: typeof DevSimpleaoeLazyImport
      parentRoute: typeof rootRoute
    }
    '/p11s/darkandlight': {
      preLoaderRoute: typeof P11sDarkandlightLazyImport
      parentRoute: typeof rootRoute
    }
    '/p11s/letterofthelaw': {
      preLoaderRoute: typeof P11sLetterofthelawLazyImport
      parentRoute: typeof rootRoute
    }
    '/p12s/p1/paradeigma3': {
      preLoaderRoute: typeof P12sP1Paradeigma3LazyImport
      parentRoute: typeof rootRoute
    }
    '/p12s/p1/superchaintheory1': {
      preLoaderRoute: typeof P12sP1Superchaintheory1LazyImport
      parentRoute: typeof rootRoute
    }
    '/p12s/p1/superchaintheory2a': {
      preLoaderRoute: typeof P12sP1Superchaintheory2aLazyImport
      parentRoute: typeof rootRoute
    }
    '/p12s/p1/superchaintheory2b': {
      preLoaderRoute: typeof P12sP1Superchaintheory2bLazyImport
      parentRoute: typeof rootRoute
    }
    '/p12s/p2/caloric1': {
      preLoaderRoute: typeof P12sP2Caloric1LazyImport
      parentRoute: typeof rootRoute
    }
    '/p12s/p2/caloric2': {
      preLoaderRoute: typeof P12sP2Caloric2LazyImport
      parentRoute: typeof rootRoute
    }
    '/p12s/p2/classical1': {
      preLoaderRoute: typeof P12sP2Classical1LazyImport
      parentRoute: typeof rootRoute
    }
    '/p12s/p2/classical2': {
      preLoaderRoute: typeof P12sP2Classical2LazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/dawntrail/': {
      preLoaderRoute: typeof MechanicsDawntrailIndexImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/': {
      preLoaderRoute: typeof MechanicsEndwalkerIndexImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/dawntrail/lightweight/clones': {
      preLoaderRoute: typeof MechanicsDawntrailLightweightClonesImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/dawntrail/lightweight/mouser1': {
      preLoaderRoute: typeof MechanicsDawntrailLightweightMouser1Import
      parentRoute: typeof rootRoute
    }
    '/mechanics/criterion/aai/': {
      preLoaderRoute: typeof MechanicsCriterionAaiIndexImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/dawntrail/lightweight/': {
      preLoaderRoute: typeof MechanicsDawntrailLightweightIndexImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosIndexImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/criterion/aai/statice/intermission': {
      preLoaderRoute: typeof MechanicsCriterionAaiStaticeIntermissionLazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p11s/darkandlight': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP11sDarkandlightLazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p11s/letterofthelaw': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP11sLetterofthelawLazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p12s/p1/paradeigma3': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP12sP1Paradeigma3LazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory1': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory1LazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory2a': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2aLazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p12s/p1/superchaintheory2b': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2bLazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p12s/p2/caloric1': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP12sP2Caloric1LazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p12s/p2/caloric2': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP12sP2Caloric2LazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p12s/p2/classical1': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP12sP2Classical1LazyImport
      parentRoute: typeof rootRoute
    }
    '/mechanics/endwalker/anabaseios/p12s/p2/classical2': {
      preLoaderRoute: typeof MechanicsEndwalkerAnabaseiosP12sP2Classical2LazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AboutRoute,
  DarkandlightRoute,
  LetterofthelawRoute,
  SetupLazyRoute,
  DevSimpleaoeLazyRoute,
  P11sDarkandlightLazyRoute,
  P11sLetterofthelawLazyRoute,
  P12sP1Paradeigma3LazyRoute,
  P12sP1Superchaintheory1LazyRoute,
  P12sP1Superchaintheory2aLazyRoute,
  P12sP1Superchaintheory2bLazyRoute,
  P12sP2Caloric1LazyRoute,
  P12sP2Caloric2LazyRoute,
  P12sP2Classical1LazyRoute,
  P12sP2Classical2LazyRoute,
  MechanicsDawntrailIndexRoute,
  MechanicsEndwalkerIndexRoute,
  MechanicsDawntrailLightweightClonesRoute,
  MechanicsDawntrailLightweightMouser1Route,
  MechanicsCriterionAaiIndexRoute,
  MechanicsDawntrailLightweightIndexRoute,
  MechanicsEndwalkerAnabaseiosIndexRoute,
  MechanicsCriterionAaiStaticeIntermissionLazyRoute,
  MechanicsEndwalkerAnabaseiosP11sDarkandlightLazyRoute,
  MechanicsEndwalkerAnabaseiosP11sLetterofthelawLazyRoute,
  MechanicsEndwalkerAnabaseiosP12sP1Paradeigma3LazyRoute,
  MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory1LazyRoute,
  MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2aLazyRoute,
  MechanicsEndwalkerAnabaseiosP12sP1Superchaintheory2bLazyRoute,
  MechanicsEndwalkerAnabaseiosP12sP2Caloric1LazyRoute,
  MechanicsEndwalkerAnabaseiosP12sP2Caloric2LazyRoute,
  MechanicsEndwalkerAnabaseiosP12sP2Classical1LazyRoute,
  MechanicsEndwalkerAnabaseiosP12sP2Classical2LazyRoute,
])

/* prettier-ignore-end */
